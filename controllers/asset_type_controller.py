from flask import Blueprint, jsonify, request
from main import db
from models.asset_type import AssetType
from schemas.asset_type_schema import asset_type_schema, asset_types_schema
from datetime import date

asset_type = Blueprint('asset_type', __name__, url_prefix="/asset_type")

# get all the assets
@asset_type.route("/", methods=["GET"])
def get_asset():
    # get all the assets from the database table
    asset_type_list = AssetType.query.all()
    # Convert the assets from the database into a JSON format and store them in result
    result = asset_types_schema.dump(asset_type_list)
    # return the data in JSON format
    return jsonify(result)

# add an asset
@asset_type.route("/", methods=["POST"])
def create_asset():
    #Create a new asset
    asset_fields = asset_type_schema.load(request.json)

    new_asset = AssetType()
    new_asset.description = asset_fields["description"]
    # new_asset.asset_id = asset_fields["asset_id"]
    # not taken from the request, generated by the server
    new_asset.date = date.today()
    # add to the database and commit
    db.session.add(new_asset)
    db.session.commit()
    #return the asset in the response
    return jsonify(asset_type_schema.dump(new_asset))

# delete a asset
@asset_type.route("/<int:id>/", methods=["DELETE"])
def delete_asset(id):
    # #get the user id invoking get_jwt_identity
    # user_id = get_jwt_identity()
    # #Find it in the db
    # user = User.query.get(user_id)
    # #Make sure it is in the database
    # if not user:
    #     return abort(401, description="Invalid user")
    # # Stop the request if the user is not an admin
    # if not user.admin:
    #     return abort(401, description="Unauthorised user")
    # # find the card
    # card = Card.query.filter_by(id=id).first()
    # #return an error if the card doesn't exist
    # if not Card:
    #     return abort(400, description= "Card doesn't exist")
    # #Delete the card from the database and commit
    # db.session.delete(card)
    # db.session.commit()
    # #return the card in the response
    # return jsonify(card_schema.dump(card))
    return "Asset Deleted"